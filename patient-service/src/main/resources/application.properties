spring.application.name=patient-service
server.port=4000

spring.datasource.url=jdbc:postgresql://dpg-d24ejauuk2gs73cg4ffg-a/patient_db_21dg
spring.datasource.username=patient_db_21dg_user
spring.datasource.password=4aCsjD0iIFQxiSOPXH5AK7S83hwAW4yg

spring.jpa.hibernate.ddl-auto=update
spring.sql.init.mode=always

debug=true

#spring.application.name=patient-service
#spring.datasource.url=jdbc:postgresql://patient-db:5432/patientdb
#spring.datasource.username=postgres
#spring.datasource.password=Sita2008@
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect


# Disable H2
#spring.h2.console.enabled=false
#spring.datasource.driver-class-name=org.postgresql.Driver


## PostgreSQL connection (Docker service name is 'db')
#spring.datasource.url=jdbc:postgresql://localhost:5432/patientdb
#spring.datasource.username=postgres
#spring.datasource.password=Sita2008@
#
## PostgreSQL JDBC driver
#spring.datasource.driver-class-name=org.postgresql.Driver
#
## JPA settings
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=update
#spring.sql.init.mode=always
#spring.jpa.show-sql=true

# Server settings
#server.port=4000

# Logging
logging.level.root=info
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.ByteArraySerializer
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:kafka:9092}

